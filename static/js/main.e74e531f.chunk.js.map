{"version":3,"sources":["Components/Alerts/Context/AlertContext.js","Components/Alerts/HOC/withAlert.js","Components/Alerts/Alert.js","Components/Layout/SubmitButton.js","Components/PresentationPage/Title.js","Components/Miscelaneous/ResourceLink.js","Components/PresentationPage/Members/MembersData.js","Components/PresentationPage/Members/Member.js","Components/PresentationPage/Members/Members.js","Components/PresentationPage/PresentationPage.js","Components/Sequence/Sequence.js","Components/Charts/Chart.js","Components/ConvolutionResult/Charts/ResultSequenceChart.js","Context/Convolution/ConvolutionContext.js","Context/Convolution/HOC/withConvolution.js","Components/ConvolutionResult/ConvolutionResult.js","Components/FunctionInput/Fields/FunctionInputField.js","Components/FunctionInput/Fields/AditionalSettings.js","Context/InputFunction/FunctionsContext.js","Context/InputFunction/HOC/withContextConsumer.js","Classes/InputFunction.js","Components/FunctionInput/FunctionInput.js","Components/FunctionInput/FunctionInputContainer.js","Components/FunctionPreview/Charts/SequencesCharts.js","Classes/Convolution/BasicConvolution.js","Classes/Convolution/PeriodicConvolution.js","Classes/Convolution/CircularConvolution.js","Classes/Convolution/ConvolutionFactory.js","Components/FunctionPreview/Fields/TypeInput.js","Components/FunctionPreview/FunctionPreview.js","Components/FunctionPreview/FunctionPreviewContainer.js","Routes.js","Components/Layout/Navigation/Navbar.js","Context/InputFunction/HOC/withContextProvider.js","Components/Alerts/HOC/withAlertProvider.js","App.js","Context/Convolution/HOC/withConvolutionProvider.js","index.js"],"names":["AlertContext","React","createContext","withAlert","WrappedComponent","props","useContext","alert","setAlert","children","useState","showAlert","setShowAlert","type","message","duration","useEffect","alertDuration","setTimeout","hideAndClearAlert","className","role","SubmitButton","onClick","Title","src","height","width","ResourceLink","href","openInSameWindow","target","members","josue","name","avatar","github","damian","vladimir","Member","memberId","member","Members","withRouter","history","event","preventDefault","push","Sequence","label","sequence","sequenceProperty","printPeriodicIndicator","periodic","sequenceArray","map","item","index","origin","length","printSequence","Chart","id","title","color","chartCanvas","useRef","canvasContext","current","getContext","ChartJS","data","labels","calculateLabels","datasets","borderWidth","borderColor","backgroundColor","options","scales","yAxes","ticks","beginAtZero","xAxes","barPercentage","calculateBarWidth","gridLines","drawOnChartArea","display","text","Array","from","emptyLabel","ref","ResultSequenceChart","resultSequence","isPeriodic","concat","addTwoPeriods","getSequence","ConvolutionContext","withConvolution","convolutionResult","setConvolutionResult","location","console","log","missingCalculations","pathname","FunctionInputField","placeholder","onChange","rest","AditionalSettings","originFieldName","periodicFieldName","collapsed","setCollapsed","e","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","value","for","defaultValue","FunctionsContext","withContextConsumer","showDefaultAlert","setShowDefaultAlert","functions","setFunctions","functionsNotDefined","InputFunction","setFunction","function","getFunction","setOrigin","getOrigin","setPeriodic","this","getInputAsArray","input","inputAsArray","split","inputArrayEntry","Number","FunctionInput","handleSubmit","handleRedirect","handleConstraintsChange","handleInputFunctionChange","inputFunctions","firstFunction","secondFunction","sequenceInput","setSequenceInput","setInputFunctions","firstFunctionOrigin","firstFunctionPeriodic","secondFunctionOrigin","secondFunctionPeriodic","sequenceConstraints","setSequenceConstraints","getInputFunctionAsArray","firstFunctionAsArray","secondFunctionAsArray","getInputFunctionsProperties","firstFunctionProperties","secondFunctionProperties","saveFunctions","checked","parseInt","SequencesCharts","firstSequence","secondSequence","prototype","addZerosToEnd","zeros","fill","addZerosToStart","BasicConvolution","addZerosToArrayEnd","array","getResultArrayLength","resultArray","getLengthFixedArrays","arraysToFix","targetLength","getFirstSequencePeriod","getSecondSequencePeriod","calculateResultSequenceOrigin","areBothFunctionsPeriodic","isConvolutionResultPeriodic","getConvolutionPeriod","firstFunctionPeriod","secondFunctionPeriod","Math","max","sumArrays","arraysToSum","resultArrayLength","numberOfArrays","arrayPosition","positionSum","arrayNumber","multiplicate","secondFunctionNumberOfItems","secondFunctionItem","secondFunctionIndex","firstFunctionItem","errorCallback","partialResultArray","lengthFixedResultArray","error","EMPTY_RESULT","getArrayBlocks","itemsPerBlock","numberOfArrayBlocks","ceil","blockStartIndex","blockEndIndex","slice","PeriodicConvolution","getNormalizedSequence","modulo","zerosToAdd","getPeriodicConvolution","period","periodicResultBlocks","basicConvolutionResult","getBasicConvolution","periodicConvolutionResult","CircularConvolution","ConvolutionFactory","create","convolutionAlgorithm","BASIC","PERIODIC","CIRCULAR","TypeInput","setConvolutionAlgorithm","FunctionPreview","clearFunctions","convolutionAlgorithmType","redirect","setRedirect","redirectToResults","calculate","Routes","path","exact","strict","Navbar","to","aria-label","withContextProvider","Provider","withAlertProvider","initialAlertState","initialConvolutionResult","withConvolutionProvider","WithRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e74e531f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet AlertContext = React.createContext();\r\n\r\nexport default AlertContext;\r\n\r\n","import React, { useContext, useEffect } from 'react';\r\n//Context\r\nimport AlertContext from '../Context/AlertContext';\r\n\r\nconst withAlert = WrappedComponent => {\r\n    const WithAlert = props => {\r\n        let [alert, setAlert] = useContext(AlertContext);\r\n\r\n        return(\r\n            <WrappedComponent\r\n                alert = { alert }\r\n                setAlert = { setAlert }\r\n                { ...props }\r\n            />\r\n        )\r\n    }\r\n\r\n    return WithAlert;\r\n}\r\n\r\nexport default withAlert;","import React, { useEffect, useState } from 'react';\r\nimport withAlert from './HOC/withAlert';\r\n\r\nconst Alert = ({ alert, children, setAlert }) => {\r\n    //State\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    //Props\r\n    let { type, message, duration } = alert;\r\n    //Constantes\r\n    const DEFAULT_ALERT_TIME = 3000;\r\n\r\n\r\n    useEffect(() => {\r\n        setShowAlert(false);\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        let alertDuration = duration || DEFAULT_ALERT_TIME;\r\n        if(alert.message){\r\n            setShowAlert(true);\r\n            setTimeout(hideAndClearAlert, alertDuration);\r\n        }\r\n    }, [alert.message]);\r\n\r\n    const hideAndClearAlert = () => {\r\n        setShowAlert(false);\r\n        setAlert({\r\n            type: '',\r\n            message: '',\r\n            duration: null\r\n        });\r\n    }\r\n\r\n    const getDisplayType = () => {\r\n        return showAlert ? 'd-block' : 'd-none';\r\n    }\r\n\r\n    return(\r\n        <div className={ `alert alert-${ type || 'danger' } rounded-lg shadow ${ getDisplayType() }` } role='alert'>\r\n            { message }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withAlert(Alert);","import React from 'react';\r\n\r\nconst SubmitButton = ({ onClick, children }) => (\r\n    <div className='form-group text-center'>\r\n        <button\r\n            onClick = { onClick }\r\n            className = 'btn btn-outline-primary rounded-lg shadow'\r\n        >\r\n            { children }\r\n        </button>\r\n\r\n    </div>\r\n);\r\n\r\nexport default SubmitButton;","import React, { Fragment } from 'react';\r\n\r\nconst Title = () => (\r\n    <Fragment>\r\n        <div className='d-flex flex-row justify-content-around'>\r\n            <div>\r\n                <img src='https://www.encb.ipn.mx/assets/files/encb/img/escudos/logo-ipn.png' height='100px' width='100px' />\r\n            </div>\r\n            <div>\r\n                <h2>Instituto Politécnico Nacional</h2>\r\n                <h3>Escuela Superior de Cómputo</h3>\r\n            </div>\r\n            <div>\r\n                <img src='https://www.escom.ipn.mx/images/logoESCOM2x.png' height='100px' width='100px' />\r\n            </div>\r\n        </div>\r\n        <hr/>\r\n        <div className='my-4'>\r\n            <h4>Práctica 2: Algoritmos de convolución de secuencias</h4>\r\n            <img src='https://img.pngio.com/matching-algorithm-png-skratch-algorithm-png-512_512.png' height='100px' width='100px' />\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nconst ResourceLink = ({ children, href, openInSameWindow }) => (\r\n    <a\r\n        href = { href }\r\n        target = { openInSameWindow ? 'self' : 'blank' }\r\n        className = 'text-decoration-none text-muted'\r\n    >\r\n        { children }\r\n    </a>\r\n);\r\n\r\nexport default ResourceLink;","\r\nlet members = {\r\n    josue: {\r\n        name: 'Josue David Hernández Ramírez',\r\n        avatar: 'https://avatars0.githubusercontent.com/u/8957173?s=460&v=4',\r\n        github: 'https://github.com/JosueHernandezR',\r\n    },\r\n    damian: {\r\n        name: 'Damián Alanís Ramírez',\r\n        avatar: 'https://avatars1.githubusercontent.com/u/5724479?s=460&u=ac1cb8e67e18ebd3a92c1f0432e814f4b82f4f55&v=4',\r\n        github: 'https://github.com/d-alanis98',\r\n    },\r\n    vladimir:{\r\n        name: 'Vladimir Azpetia Rodríguez',\r\n        avatar: 'https://avatars0.githubusercontent.com/u/24665258?s=460&u=823e5aea71fa80796a2da5a0aebd8fb7fa2818c5&v=4',\r\n        github: 'https://github.com/VladimirAh'\r\n    }\r\n}\r\nexport default members;","import React from 'react';\r\n//Components\r\nimport ResourceLink from '../../Miscelaneous/ResourceLink';\r\n//Datasource\r\nimport Members from './MembersData';\r\n\r\n\r\nconst Member = ({ memberId, className }) => {\r\n    const member = Members[memberId];\r\n\r\n    return(\r\n        <div className={ `card bg-members border-0 rounded-lg ${ className }` }>\r\n            <div className='card-img'>\r\n                <ResourceLink\r\n                    href = { member.github }\r\n                >\r\n                    <img src={ member.avatar } className='rounded-lg my-3' height='60px' />\r\n                </ResourceLink>             \r\n            </div>\r\n            <div className='card-body'>\r\n                <ResourceLink\r\n                    href = { member.github }\r\n                >\r\n                    { member.name }\r\n                </ResourceLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Member;","import React from 'react';\r\nimport Member from './Member';\r\n\r\nconst Members = () => (\r\n    <div className='my-3 py-3'>\r\n        <h5>Integrantes:</h5>\r\n        <div className='d-flex flex-row justify-content-center w-100'>\r\n            <Member\r\n                memberId = 'damian'\r\n            />\r\n            <Member\r\n                memberId = 'josue'\r\n                className = 'ml-3'\r\n            />\r\n            <Member\r\n                memberId = 'vladimir'\r\n                className = 'ml-3'\r\n            />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Members;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SubmitButton from '../Layout/SubmitButton';\r\nimport Title from './Title';\r\nimport Members from './Members/Members';\r\n\r\nconst PresentationPage = ({ history }) => {\r\n\r\n    const handleClick = event => {\r\n        event.preventDefault();\r\n        history.push('/start')\r\n    }\r\n    return(\r\n        <div className='container text-center mt-3 py-4 text-main'>\r\n            <Title />\r\n            <Members />\r\n            <SubmitButton\r\n                onClick = { handleClick }\r\n            >\r\n                Comenzar\r\n            </SubmitButton>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(PresentationPage);","import React, { Fragment } from 'react';\r\n\r\nconst Sequence = ({ label, sequence, sequenceProperty }) => {\r\n    const DEFAULT_PROPERTY = 'function';\r\n    const printPeriodicIndicator = () =>  sequence.periodic ? '...' : '';\r\n\r\n    const printSequence = () => {\r\n        let sequenceArray = sequence[sequenceProperty || DEFAULT_PROPERTY];\r\n        return sequenceArray.map((item, index) => {\r\n            let className = 'text-dark'\r\n            if(index === sequence.origin)\r\n                className = 'text-primary font-weight-bold'\r\n            return <span><em className={ className }>{ item }</em>{ index < sequenceArray.length ? ', ' : ''}</span>\r\n        })\r\n    }\r\n    return(\r\n        <Fragment>\r\n            <h6>{ label }</h6>\r\n            <p>[{ printPeriodicIndicator() } { printSequence() } { printPeriodicIndicator() }]</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sequence;","import React, { useEffect, useRef } from 'react';\r\nimport { Chart as ChartJS } from 'chart.js';\r\n//Estilos\r\nimport './Chart.css';\r\n\r\nconst Chart = ({ id, title, label, color, origin, type, sequence }) => {\r\n    //Constantes\r\n    const DEFAULT_ID     = 'test';\r\n    const DEFAULT_TYPE   = 'bar';\r\n    const DEFAULT_COLOR  = 'rgba(255, 0, 255, 0.5)';\r\n    const DEFAULT_LABEL  = 'Valores';\r\n\r\n    //HOOKS\r\n    //Ref\r\n    const chartCanvas = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const canvasContext = chartCanvas.current.getContext('2d');\r\n        let progress = {}\r\n        new ChartJS(canvasContext, {\r\n            type: type || DEFAULT_TYPE,\r\n            data: {\r\n                labels: calculateLabels(),\r\n                datasets: [\r\n                    {\r\n                        label: label || DEFAULT_LABEL,\r\n                        data: sequence,\r\n                        borderWidth: 2,\r\n                        borderColor: color ? `rgba(${color}, 1)` : DEFAULT_COLOR,\r\n                        backgroundColor: color ? `rgba(${color}, 0.4)` : DEFAULT_COLOR,\r\n                        \r\n                    }\r\n                ],\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero : true\r\n                        },\r\n                    }],\r\n                    xAxes: [{\r\n                        barPercentage: calculateBarWidth(),\r\n                        gridLines: {\r\n                            drawOnChartArea: false\r\n                        }\r\n                    }]\r\n                },\r\n                title: {\r\n                    display: title ? true : false,\r\n                    text: title\r\n                },\r\n                \r\n            },\r\n\r\n        });\r\n    }, []);\r\n\r\n    const calculateLabels = () => {\r\n        let labels = new Array(sequence.length);\r\n        return Array.from(labels).map((emptyLabel, index) => index - origin)\r\n    }\r\n\r\n    const calculateBarWidth = () => {\r\n        return 0.009 * sequence.length; \r\n    }\r\n    return(\r\n        <div>\r\n            <canvas \r\n                id = { id || DEFAULT_ID }\r\n                ref = { chartCanvas }\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\n//Componentes\r\nimport Chart from '../../Charts/Chart';\r\n\r\nconst ResultSequenceChart = ({ resultSequence, sequenceProperty }) => {\r\n    const DEFAULT_PROPERTY = 'sequence';\r\n\r\n    const isPeriodic = sequence => sequence.periodic;\r\n\r\n    const addTwoPeriods = sequence => sequence.concat(sequence).concat(sequence);\r\n\r\n    const getSequence = sequence => {\r\n        let sequenceArray = sequence[sequenceProperty || DEFAULT_PROPERTY]\r\n        if(!isPeriodic(sequence))\r\n            return sequenceArray;\r\n        return addTwoPeriods(sequenceArray);\r\n    }\r\n\r\n    return(\r\n        <Chart \r\n            id = 'result_sequence_chart'\r\n            label = 'Secuencia de resultado'\r\n            color = '91, 99, 170'\r\n            sequence = { getSequence(resultSequence) }\r\n            origin = { resultSequence.origin }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ResultSequenceChart;","import React from 'react';\r\n\r\nlet ConvolutionContext = React.createContext();\r\n\r\nexport default ConvolutionContext;","import React, { useContext, useEffect } from 'react';\r\n//Context\r\nimport ConvolutionContext from '../ConvolutionContext';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withAlert from '../../../Components/Alerts/HOC/withAlert';\r\n\r\nconst withConvolution = WrappedComponent => {\r\n    const WithConvolution = props => {\r\n        let [convolutionResult, setConvolutionResult] = useContext(ConvolutionContext);\r\n        let { history, location, setAlert } = props;\r\n\r\n        useEffect(() => {\r\n            console.log({ convolutionResult })\r\n        }, [])\r\n        useEffect(() => {\r\n            if(missingCalculations()){\r\n                setAlert({\r\n                    type: 'danger',\r\n                    message: 'La convolución no ha sido calculada'\r\n                })\r\n                history.push('/preview')\r\n            }\r\n        }, [convolutionResult])\r\n\r\n        const missingCalculations = () => location.pathname !== '/preview' && convolutionResult.sequence.length === 0;\r\n\r\n        if(missingCalculations())\r\n            return null;\r\n        return <WrappedComponent \r\n                    convolutionResult = { convolutionResult }\r\n                    setConvolutionResult = { setConvolutionResult }\r\n                    { ...props }\r\n                /> \r\n    }\r\n\r\n    return withRouter(withAlert(WithConvolution));\r\n}\r\n\r\nexport default withConvolution;","import React from 'react';\r\n//Componentes\r\nimport Sequence from '../Sequence/Sequence';\r\nimport ResultSequenceChart from './Charts/ResultSequenceChart';\r\n//HOC\r\nimport withConvolution from '../../Context/Convolution/HOC/withConvolution';\r\n\r\n\r\nconst ConvolutionResult = ({ convolutionResult }) => {\r\n    return(\r\n        <div className='container text-center'>\r\n            <h2>Resultados</h2>\r\n            <Sequence \r\n                label = 'Secuencia de resultado:'\r\n                sequence = { convolutionResult }\r\n                sequenceProperty = 'sequence'\r\n            />\r\n            <div className='row justify-content-center'>\r\n                <div className='col-lg-6 col-md-12'>\r\n                    <ResultSequenceChart\r\n                        resultSequence = { convolutionResult }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withConvolution(ConvolutionResult);\r\n\r\n","import React from 'react';\r\n\r\nconst FunctionInputField = ({ id, name, type, label, placeholder, onChange, ...rest }) => {\r\n\r\n    const handleChange = event => {\r\n        if(onChange && typeof(onChange) === 'function')\r\n            onChange(event);\r\n    }\r\n\r\n    return(\r\n        <div className='form-group text-left'>\r\n            <label>{ label }</label>\r\n            <input\r\n                id = { id }\r\n                name = { name }\r\n                type = { type || 'text' }\r\n                onChange = { handleChange }\r\n                className = 'form-control'\r\n                placeholder = { placeholder }\r\n                { ...rest }\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FunctionInputField;","import React, { Fragment, useState } from 'react';\r\n//Componentes\r\nimport FunctionInputField from './FunctionInputField';\r\n\r\n\r\nconst AditionalSettings = ({ originFieldName, periodicFieldName, onChange }) => {\r\n    //Constantes\r\n    const SHOW_CONFIGURATION = 'Mostrar opciones extra';\r\n    const HIDE_CONFIGURATION = 'Ocultar opciones extra';\r\n    //Hooks\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    return(\r\n        <Fragment>\r\n            <div \r\n                id = { `header_${ originFieldName }` } \r\n                onClick = { (e) => setCollapsed(!collapsed) }\r\n                className = 'cursor-click'\r\n                data-toggle = 'collapse' \r\n                data-target = { `#collapse_${ originFieldName }` } \r\n                aria-expanded = 'true' \r\n                aria-controls = { `collapse_${ originFieldName }` } \r\n            >\r\n                { collapsed ? HIDE_CONFIGURATION : SHOW_CONFIGURATION }\r\n            </div>\r\n            <div \r\n                id = { `collapse_${ originFieldName }` } \r\n                className = 'collapse' \r\n                aria-labelledby = { `header_${ originFieldName }` }\r\n            >\r\n                <div  className='d-flex flex-row justify-content-center align-items-center'>\r\n                    <div className='custom-control custom-checkbox mr-4'>\r\n                        <input \r\n                            type='checkbox' \r\n                            id = { periodicFieldName }\r\n                            name = { periodicFieldName } \r\n                            value = 'true'\r\n                            onChange = { onChange }\r\n                            className ='custom-control-input' \r\n                        />\r\n                        <label \r\n                            className = 'custom-control-label' \r\n                            for = { periodicFieldName }\r\n                        >\r\n                            Periódica\r\n                        </label>\r\n                    </div>\r\n                    <FunctionInputField\r\n                        name = { originFieldName }\r\n                        type = 'number'\r\n                        label = 'Origen (índice):'\r\n                        onChange = { onChange }\r\n                        placeholder = 'Índice del origen'\r\n                        defaultValue = '0'\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AditionalSettings;","import React from 'react';\r\n\r\nlet FunctionsContext = React.createContext();\r\n\r\nexport default FunctionsContext;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n//Context\r\nimport FunctionsContext from '../FunctionsContext';\r\n//HOC\r\nimport withAlert from '../../../Components/Alerts/HOC/withAlert';\r\n\r\n\r\nconst withContextConsumer = WrappedComponent => {\r\n    const WithContextConsumer = props => {\r\n        //HOOKS\r\n        //State\r\n        const [showDefaultAlert, setShowDefaultAlert] = useState(true);\r\n        //Context\r\n        let [functions, setFunctions] = useContext(FunctionsContext)\r\n        \r\n        //PROPS\r\n        let { location, history, setAlert } = props;\r\n\r\n        useEffect(() => {\r\n            if(functionsNotDefined()){\r\n                showDefaultAlert && setAlert({\r\n                    type: 'danger',\r\n                    message: 'No se han definido las funciones'\r\n                });\r\n                history.push('/start');\r\n            }\r\n        }, [functions])\r\n\r\n        const functionsNotDefined = () => location.pathname !== '/start' && !functions;\r\n\r\n        if(functionsNotDefined())\r\n            return null;\r\n\r\n        return <WrappedComponent\r\n                    functions = { functions }\r\n                    setAlert = { setAlert }\r\n                    setFunctions = { setFunctions }\r\n                    showDefaultAlert = { setShowDefaultAlert }\r\n                    { ...props }\r\n                />\r\n    }\r\n    return withRouter(withAlert(WithContextConsumer));\r\n}\r\n\r\nexport default withContextConsumer;","\r\nconst COMMA_SEPARATOR = ',';\r\n\r\nexport default class InputFunction{\r\n    constructor({ sequence, origin, periodic }){\r\n        this.function = sequence;\r\n        this.origin = origin;\r\n        this.periodic = periodic;\r\n    }\r\n\r\n    static getInputAsArray = input => {\r\n        let inputAsArray = input.split(COMMA_SEPARATOR);\r\n        inputAsArray = inputAsArray.map(inputArrayEntry => Number(inputArrayEntry));\r\n        return inputAsArray;\r\n    }\r\n\r\n    //Getters y setters\r\n    setFunction = sequence => this.function = sequence;\r\n\r\n    getFunction = () => this.function;\r\n\r\n    setOrigin = origin => this.origin = origin;\r\n\r\n    getOrigin = () => this.origin;\r\n\r\n    setPeriodic = periodic => this.periodic = periodic;\r\n\r\n    isPeriodic = () => this.periodic;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n//Componentes\r\nimport SubmitButton from '../Layout/SubmitButton';\r\nimport AditionalSettings from './Fields/AditionalSettings';\r\nimport FunctionInputField from './Fields/FunctionInputField';\r\n//HOC\r\nimport withContextConsumer from '../../Context/InputFunction/HOC/withContextConsumer';\r\n//Clases\r\nimport InputFunction from '../../Classes/InputFunction';\r\n\r\nconst FunctionInput = props => {\r\n    let { handleSubmit, handleRedirect, handleConstraintsChange, handleInputFunctionChange, inputFunctions } = props;\r\n    return(\r\n            <div className='container text-center text-main mt-3 py-4'>\r\n                <h3>1. Introducir secuencias</h3>\r\n                <FunctionInputField\r\n                    name = 'firstFunction'\r\n                    label = 'Secuencia1 [f(n)]: '\r\n                    onChange = { handleInputFunctionChange }\r\n                    placeholder = 'Introducir los numeros separados por comas'\r\n                />\r\n                <AditionalSettings\r\n                    originFieldName = 'firstFunctionOrigin'\r\n                    periodicFieldName = 'firstFunctionPeriodic'\r\n                    onChange = { handleConstraintsChange }\r\n                />\r\n                <FunctionInputField\r\n                    name = 'secondFunction'\r\n                    label = 'Secuencia 2 [g(n)]: '\r\n                    onChange = { handleInputFunctionChange }\r\n                    placeholder = 'Introducir los numeros separados por comas'\r\n                />\r\n                <AditionalSettings\r\n                    originFieldName = 'secondFunctionOrigin'\r\n                    periodicFieldName = 'secondFunctionPeriodic'\r\n                    onChange = { handleConstraintsChange }\r\n                />\r\n                <hr />\r\n                <SubmitButton\r\n                    onClick = { inputFunctions ? handleRedirect : handleSubmit }\r\n                >\r\n                    { inputFunctions ? 'Avanzar' : 'Guardar'  }\r\n                </SubmitButton>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default FunctionInput;","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n//Componentes\r\nimport FunctionInput from './FunctionInput';\r\n//HOC\r\nimport withContextConsumer from '../../Context/InputFunction/HOC/withContextConsumer';\r\n//Clases\r\nimport InputFunction from '../../Classes/InputFunction';\r\n\r\nconst FunctionInputContainer = ({ history, alert, setAlert, setFunctions }) => {\r\n    //Initial states\r\n    const initialSequenceInput = {\r\n        firstFunction: '',\r\n        secondFunction: ''\r\n    }\r\n    const initialSequenceConstraints = {\r\n        firstFunctionOrigin: 0,\r\n        firstFunctionPeriodic: false,\r\n        secondFunctionOrigin: 0,\r\n        secondFunctionPeriodic: false\r\n    }\r\n    //Hooks\r\n    const [sequenceInput, setSequenceInput] = useState(initialSequenceInput);\r\n    const [inputFunctions, setInputFunctions] = useState();\r\n    const [sequenceConstraints, setSequenceConstraints] = useState(initialSequenceConstraints);\r\n\r\n    //Efectos\r\n    useEffect(() => {\r\n        !alert.type && setAlert({\r\n            type: 'info',\r\n            message: 'Si va a definir secuencias periódicas, solo escriba la parte correspondiente a un periodo que incluya al origen',\r\n            duration: 5000\r\n        })\r\n    }, [])\r\n\r\n    const saveFunctions = () => {\r\n        let { firstFunctionAsArray, secondFunctionAsArray } = getInputFunctionAsArray()\r\n        //Actualizamos el estado\r\n        let { firstFunctionProperties, secondFunctionProperties } = getInputFunctionsProperties(firstFunctionAsArray, secondFunctionAsArray);\r\n        let functions = {    \r\n            firstFunction:  new InputFunction(firstFunctionProperties),\r\n            secondFunction: new InputFunction(secondFunctionProperties)\r\n        }\r\n        setInputFunctions(functions);\r\n        setFunctions(functions);\r\n    }\r\n\r\n    const getInputFunctionAsArray = () => {\r\n        return{\r\n            firstFunctionAsArray: InputFunction.getInputAsArray(sequenceInput.firstFunction),\r\n            secondFunctionAsArray: InputFunction.getInputAsArray(sequenceInput.secondFunction)\r\n        }\r\n    }\r\n\r\n    const getInputFunctionsProperties = (firstFunctionAsArray, secondFunctionAsArray) => {\r\n        return{\r\n            firstFunctionProperties: {\r\n                sequence: firstFunctionAsArray,\r\n                origin: sequenceConstraints.firstFunctionOrigin,\r\n                periodic: sequenceConstraints.firstFunctionPeriodic\r\n            },\r\n            secondFunctionProperties: {\r\n                sequence: secondFunctionAsArray,\r\n                origin: sequenceConstraints.secondFunctionOrigin,\r\n                periodic: sequenceConstraints.secondFunctionPeriodic\r\n            }\r\n        }\r\n    }\r\n\r\n    //HANDLERS \r\n\r\n    const handleInputFunctionChange = event => {\r\n        let { name, value } = event.target;\r\n        setSequenceInput({\r\n            ...sequenceInput,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleConstraintsChange = event => {\r\n        let { name, value, type } = event.target;\r\n        value = (type === 'checkbox') ? (event.target.checked ? true : false) : parseInt(value);\r\n        setSequenceConstraints({\r\n            ...sequenceConstraints,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if(!sequenceInput.firstFunction || !sequenceInput.secondFunction){\r\n            setAlert({\r\n                type: 'danger',\r\n                message: 'Se deben proprcionar ambas secuencias',\r\n                duration: 4000\r\n            })\r\n            return;\r\n        }\r\n        saveFunctions();\r\n    }\r\n\r\n    const handleRedirect = event => {\r\n        history.push('/preview');\r\n    }\r\n\r\n\r\n    return <FunctionInput\r\n                handleSubmit = { handleSubmit }\r\n                handleRedirect = { handleRedirect }\r\n                inputFunctions = { inputFunctions }\r\n                handleConstraintsChange = { handleConstraintsChange }\r\n                handleInputFunctionChange = { handleInputFunctionChange }\r\n            />\r\n}\r\n\r\nexport default withContextConsumer(withRouter(FunctionInputContainer));","import React from 'react';\r\n//Componentes\r\nimport Chart from '../../Charts/Chart';\r\nimport Sequence from '../../Sequence/Sequence';\r\n\r\nconst SequencesCharts = ({ firstSequence, secondSequence, sequenceProperty }) => {\r\n    const DEFAULT_PROPERTY = 'function';\r\n\r\n    const isPeriodic = sequence => sequence.periodic;\r\n\r\n    const addTwoPeriods = sequence => sequence.concat(sequence).concat(sequence);\r\n\r\n    const getSequence = sequence => {\r\n        let sequenceArray = sequence[sequenceProperty || DEFAULT_PROPERTY]\r\n        if(!isPeriodic(sequence))\r\n            return sequenceArray;\r\n        return addTwoPeriods(sequenceArray);\r\n    }\r\n\r\n    return(\r\n        <div className='row text-center mx-0'>\r\n            <div className='col-xl-6 col-lg-12'>\r\n                <Sequence\r\n                    label = 'Secuencia 1:'\r\n                    sequence = { firstSequence }\r\n                />\r\n                <Chart \r\n                    id = 'first_sequence_chart'\r\n                    label = 'Secuencia 1'\r\n                    color = '255, 0, 255'\r\n                    sequence = { getSequence(firstSequence) }\r\n                    origin = { firstSequence.origin }\r\n                />\r\n            </div>\r\n            <div className='col-xl-6 col-lg-12'>\r\n                <Sequence\r\n                    label = 'Secuencia 2:'\r\n                    sequence = { secondSequence }\r\n                />\r\n                <Chart \r\n                    id = 'second_sequence_chart'\r\n                    label = 'Secuencia 2'\r\n                    color = '255, 255, 0'\r\n                    sequence = { getSequence(secondSequence) }\r\n                    origin = { secondSequence.origin }\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SequencesCharts;","//Prototypes\r\nArray.prototype.addZerosToEnd = function(zeros){\r\n    return this.concat(new Array(zeros).fill(0));\r\n}\r\n\r\nArray.prototype.addZerosToStart = function(zeros){\r\n    return (new Array(zeros).fill(0)).concat(this);\r\n}\r\n\r\n\r\nexport default class BasicConvolution{\r\n\r\n    constructor(firstFunctionProperties, secondFunctionProperties){\r\n        this.firstFunctionProperties = firstFunctionProperties;\r\n        this.secondFunctionProperties = secondFunctionProperties;\r\n        //Obtenemos directamente las funciones para poder operar sobre ellas con mayor facilidad\r\n        this.firstFunction = firstFunctionProperties.function;\r\n        this.secondFunction = secondFunctionProperties.function;\r\n        //Secuencia de resultado\r\n        this.resultSequence = [];\r\n    }\r\n\r\n    //Propeidad de resultado vacío disponible para esta clase y las que hereden de esta\r\n    static EMPTY_RESULT = {\r\n        sequence: [],\r\n        origin: 0,\r\n        periodic: false,\r\n    }\r\n\r\n\r\n    //Helpers\r\n\r\n    addZerosToArrayEnd = (array, zeros) => array.addZerosToEnd(zeros);\r\n\r\n    getResultArrayLength = resultArray => resultArray[0].length;\r\n\r\n    getLengthFixedArrays = arraysToFix => {\r\n        let targetLength = this.getResultArrayLength(arraysToFix);\r\n        return arraysToFix.map(array => array.addZerosToStart(targetLength - array.length))\r\n    }\r\n\r\n    getFirstSequencePeriod = () => this.firstFunctionProperties.periodic ? this.firstFunction.length : 0;\r\n\r\n    getSecondSequencePeriod = () => this.secondFunctionProperties.periodic ? this.secondFunction.length : 0;\r\n\r\n\r\n    //Algoritmo\r\n    calculateResultSequenceOrigin = () => {\r\n        return this.firstFunctionProperties.origin + this.secondFunctionProperties.origin;\r\n    }\r\n\r\n    areBothFunctionsPeriodic = () => this.firstFunctionProperties.periodic && this.secondFunctionProperties.periodic;\r\n\r\n    isConvolutionResultPeriodic = () => {\r\n        return this.firstFunctionProperties.periodic || this.secondFunctionProperties.periodic;\r\n    }\r\n\r\n    getConvolutionPeriod = () => {\r\n        let firstFunctionPeriod = 0, secondFunctionPeriod = 0;\r\n        if(this.firstFunctionProperties.periodic)\r\n            firstFunctionPeriod = this.firstFunction.length;\r\n        if(this.secondFunctionProperties.periodic)\r\n            secondFunctionPeriod = this.secondFunction.length;\r\n        return Math.max(firstFunctionPeriod, secondFunctionPeriod); //El periodo de la convolución será el periodo más grande\r\n    }\r\n\r\n    sumArrays = arraysToSum => {\r\n        let resultArray = [];\r\n        //Obtenemos el numero de posiciones a calcular (sumar), esto es la longitud del primer array aunque todos\r\n        let resultArrayLength = this.getResultArrayLength(arraysToSum); //tienen la misma longitud en este punto pues ya fueron normalizados\r\n        let numberOfArrays = arraysToSum.length; //EL numero de arreglos o 'filas' de la multiplicacion\r\n        //Inicio del algoritmo\r\n        for(let arrayPosition = 0; arrayPosition < resultArrayLength; arrayPosition++){\r\n            let positionSum = 0;\r\n            //Calculamos la suma de todos los elementos de los arrays de esa posicion especifica\r\n            for(let arrayNumber = 0; arrayNumber < numberOfArrays; arrayNumber++)\r\n                positionSum += arraysToSum[arrayNumber][arrayPosition]\r\n            //La agregamos al array de resultados\r\n            resultArray.push(positionSum)\r\n        }\r\n        return resultArray;\r\n    }\r\n\r\n    multiplicate = () => {\r\n        let secondFunctionNumberOfItems = this.secondFunction.length;\r\n        return this.secondFunction.map((secondFunctionItem, secondFunctionIndex) => {\r\n            let parcialResultArray = this.firstFunction.map(firstFunctionItem => firstFunctionItem * secondFunctionItem)\r\n            return parcialResultArray.addZerosToEnd(secondFunctionNumberOfItems - secondFunctionIndex - 1)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    calculate(errorCallback = null){\r\n        try{\r\n            let partialResultArray = this.multiplicate();\r\n            let lengthFixedResultArray = this.getLengthFixedArrays(partialResultArray);\r\n            this.resultSequence = this.sumArrays(lengthFixedResultArray);\r\n        }\r\n        catch(error){\r\n            if(errorCallback && typeof(errorCallback) === 'function')\r\n                errorCallback(error.message)\r\n            return BasicConvolution.EMPTY_RESULT;\r\n        }\r\n        return{\r\n            sequence: this.resultSequence,\r\n            origin: this.calculateResultSequenceOrigin(),\r\n            periodic: this.isConvolutionResultPeriodic()\r\n        }\r\n    }\r\n}","import BasicConvolution from \"./BasicConvolution\";\r\n\r\nconst PERIODIC_CONVOLUTION_ERROR_MESSAGE = 'Una (y solo una) de las funciones debe ser periódica';\r\n\r\nArray.prototype.getArrayBlocks = function(itemsPerBlock){\r\n    let numberOfArrayBlocks = Math.ceil(this.length / itemsPerBlock);\r\n    return Array.from(new Array(numberOfArrayBlocks)).map((array, index) => {\r\n        let blockStartIndex = index * itemsPerBlock;\r\n        let blockEndIndex = blockStartIndex + itemsPerBlock;\r\n        return this.slice(blockStartIndex, blockEndIndex);\r\n    });\r\n}\r\n\r\n\r\nexport default class PeriodicConvolution extends BasicConvolution{\r\n    constructor(firstFunction, secondFunction){\r\n        super(firstFunction, secondFunction);\r\n    }\r\n\r\n    static EMPTY_RESULT = BasicConvolution.EMPTY_RESULT;\r\n\r\n    getNormalizedSequence = () => {\r\n        let itemsPerBlock = this.getConvolutionPeriod();\r\n        let convolutionLength = this.resultSequence.length;\r\n        let modulo = convolutionLength % itemsPerBlock;\r\n        //Si es itemsPerBlock divide exactamente a convolutionLength se retorna la secuencia completa pues no hay necesidad de agregar ceros\r\n        if(modulo === 0)\r\n            return this.resultSequence;\r\n        //En caso contrario, se agregan los ceros necesarios al final de la secuencia\r\n        let zerosToAdd = itemsPerBlock - modulo;\r\n        //Se retirna el array con los ceros agregados al final\r\n        return this.resultSequence.addZerosToEnd(zerosToAdd)\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    calculateResultSequenceOrigin = () => {\r\n        let partialOrigin = this.firstFunctionProperties.origin + this.secondFunctionProperties.origin;\r\n        let period = this.getConvolutionPeriod();\r\n        return partialOrigin % period;\r\n    }\r\n\r\n\r\n    getBasicConvolution(){\r\n        return super.calculate();\r\n    }\r\n\r\n    getPeriodicConvolution = () => {\r\n        let period = this.getConvolutionPeriod();\r\n        let normalizedSequence = this.getNormalizedSequence();\r\n        let periodicResultBlocks = normalizedSequence.getArrayBlocks(period);\r\n        return this.sumArrays(periodicResultBlocks)\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    calculate(errorCallback = null){\r\n        let basicConvolutionResult = this.getBasicConvolution();\r\n        if(!this.isConvolutionResultPeriodic() || this.areBothFunctionsPeriodic()){\r\n            if(errorCallback && typeof(errorCallback) === 'function')\r\n                errorCallback(PERIODIC_CONVOLUTION_ERROR_MESSAGE);\r\n            return BasicConvolution.EMPTY_RESULT;\r\n        }\r\n        let periodicConvolutionResult = this.getPeriodicConvolution()\r\n        return {\r\n            ...basicConvolutionResult,\r\n            sequence: periodicConvolutionResult\r\n        };\r\n    }\r\n}","import PeriodicConvolution from \"./PeriodicConvolution\";\r\n\r\n\r\nconst CIRCULAR_CONVOLUTION_ERROR_MESSAGE = 'Ambas funciones deben ser periódicas para aplicar convolución circular';\r\n\r\n\r\nexport default class CircularConvolution extends PeriodicConvolution{\r\n    constructor(firstFunctionProperties, secondFunctionProperties){\r\n        super(firstFunctionProperties, secondFunctionProperties);\r\n    }\r\n\r\n    calculate(errorCallback = null){\r\n        let basicConvolutionResult = this.getBasicConvolution();\r\n        if(!this.areBothFunctionsPeriodic()){\r\n            if(errorCallback && typeof(errorCallback) === 'function')\r\n                errorCallback(CIRCULAR_CONVOLUTION_ERROR_MESSAGE);\r\n            return PeriodicConvolution.EMPTY_RESULT;\r\n        }\r\n        let periodicConvolutionResult = this.getPeriodicConvolution()\r\n        return {\r\n            ...basicConvolutionResult,\r\n            sequence: periodicConvolutionResult\r\n        };\r\n        \r\n    }\r\n}","import BasicConvolution from \"./BasicConvolution\";\r\nimport PeriodicConvolution from \"./PeriodicConvolution\";\r\nimport CircularConvolution from \"./CircularConvolution\";\r\n\r\n\r\nexport default class ConvolutionFactory{\r\n    static BASIC    = 'BASIC';\r\n    static PERIODIC = 'PERIODIC';\r\n    static CIRCULAR = 'CIRCULAR';\r\n\r\n    constructor(type, firstFunctionProperties, secondFunctionProperties){\r\n        this.type = type;\r\n        this.firstFunction = firstFunctionProperties;\r\n        this.secondFunction = secondFunctionProperties;\r\n    }\r\n\r\n    create = () => {\r\n        let convolutionAlgorithm;\r\n        switch(this.type){\r\n            case ConvolutionFactory.BASIC:\r\n                convolutionAlgorithm = new BasicConvolution(this.firstFunction, this.secondFunction);\r\n                break;\r\n            case ConvolutionFactory.PERIODIC:\r\n                convolutionAlgorithm = new PeriodicConvolution(this.firstFunction, this.secondFunction);\r\n                break;\r\n            case ConvolutionFactory.CIRCULAR:\r\n                convolutionAlgorithm = new CircularConvolution(this.firstFunction, this.secondFunction);\r\n                break;\r\n            default:\r\n                convolutionAlgorithm = null;\r\n        }\r\n        return convolutionAlgorithm;\r\n    }\r\n}","import React from 'react';\r\nimport ConvolutionFactory from '../../../Classes/Convolution/ConvolutionFactory';\r\n\r\nconst TypeInput = ({ setConvolutionAlgorithm }) => {\r\n    const handleChange = event => {\r\n        let { value } = event.target;\r\n        setConvolutionAlgorithm(value);\r\n    }\r\n    return(\r\n        <div className='form-group'>\r\n            <label className='control-label'>Tipo de algoritmo a utilizar:</label>\r\n            <select\r\n                className = 'form-control'\r\n                onChange = { handleChange }\r\n            >\r\n                <option value={ ConvolutionFactory.BASIC }>Básico</option>\r\n                <option value={ ConvolutionFactory.PERIODIC }>Periódica</option>\r\n                <option value={ ConvolutionFactory.CIRCULAR }>Circular</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TypeInput;","import React, { useContext, useEffect, useState } from 'react';\r\n//Componentes\r\nimport Sequence from '../Sequence/Sequence';\r\nimport SubmitButton from '../Layout/SubmitButton';\r\nimport SequencesCharts from './Charts/SequencesCharts';\r\nimport TypeInput from './Fields/TypeInput';\r\n\r\nconst FunctionPreview = props => {\r\n    //PROPS\r\n    //Funciones\r\n    let { firstFunction, secondFunction } = props;\r\n    //Handlers\r\n    let { handleSubmit, clearFunctions, setConvolutionAlgorithm } = props;\r\n    return(\r\n        <div className='container text-center mt-3 py-3'>\r\n            <h3>Preview de las secuencias</h3>\r\n            <button className='btn btn-danger btn-sm rounded-lg shadow' onClick = { clearFunctions }>\r\n                Restablecer\r\n            </button>\r\n            <hr/>\r\n            <SequencesCharts\r\n                firstSequence = { firstFunction }\r\n                secondSequence = { secondFunction }\r\n            />\r\n\r\n            <TypeInput\r\n                setConvolutionAlgorithm = { setConvolutionAlgorithm }\r\n            />\r\n            <SubmitButton\r\n                onClick = { handleSubmit }\r\n            >\r\n                Calcular\r\n            </SubmitButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FunctionPreview;\r\n\r\n/*\r\nSequence =  functions.firstFunction\r\n*/","import React, { useContext, useEffect, useState } from 'react';\r\n//Componentes\r\nimport FunctionPreview from './FunctionPreview';\r\n//HOC\r\nimport withConvolution from '../../Context/Convolution/HOC/withConvolution';\r\nimport withContextConsumer from '../../Context/InputFunction/HOC/withContextConsumer';\r\n//Clases\r\nimport ConvolutionFactory from '../../Classes/Convolution/ConvolutionFactory';\r\n\r\n\r\n\r\nconst FunctionPreviewContainer = ({ functions, history, convolutionResult, setAlert, setFunctions, setConvolutionResult, showDefaultAlert }) => {\r\n    const [convolutionAlgorithmType, setConvolutionAlgorithm] = useState(ConvolutionFactory.BASIC);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const clearFunctions = event => {\r\n        setFunctions(null);\r\n        showDefaultAlert(false);\r\n        setAlert({\r\n            type: 'warning',\r\n            message: 'Se eliminaron las funciones introducidas, vuelva a ingresarlas'\r\n        })\r\n    }\r\n\r\n    const errorCallback = error => {\r\n        setRedirect(false);\r\n        setAlert({\r\n            type: 'danger',\r\n            message: error\r\n        })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        setRedirect(true);\r\n        let convolutionFactory = new ConvolutionFactory(convolutionAlgorithmType, functions.firstFunction, functions.secondFunction)\r\n        let convolutionAlgorithm = convolutionFactory.create()\r\n        let convolutionResult = convolutionAlgorithm.calculate(errorCallback)\r\n        setConvolutionResult(convolutionResult);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(convolutionResult.sequence.length > 0 && redirect){\r\n            redirectToResults();\r\n        }\r\n    }, [redirect, convolutionResult])\r\n\r\n    const redirectToResults = () => {\r\n        history.push('/result');\r\n    }\r\n\r\n    \r\n    return <FunctionPreview\r\n                handleSubmit = { handleSubmit }\r\n                clearFunctions = { clearFunctions }\r\n                firstFunction = { functions.firstFunction }\r\n                secondFunction = { functions.secondFunction }\r\n                setConvolutionAlgorithm = { setConvolutionAlgorithm }\r\n            />\r\n}\r\n\r\nexport default withContextConsumer(withConvolution(FunctionPreviewContainer));","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PresentationPage from './Components/PresentationPage/PresentationPage';\r\nimport ConvolutionResult from './Components/ConvolutionResult/ConvolutionResult';\r\nimport FunctionInputContainer from './Components/FunctionInput/FunctionInputContainer';\r\nimport FunctionPreviewContainer from './Components/FunctionPreview/FunctionPreviewContainer';\r\n\r\nconst Routes = () => {\r\n    return(\r\n        <Switch>\r\n            <Route \r\n                path = '/' \r\n                exact \r\n                strict\r\n            >\r\n                <PresentationPage />\r\n            </Route>\r\n            <Route\r\n                path = '/start'\r\n                exact\r\n                strict\r\n            >\r\n                <FunctionInputContainer />\r\n            </Route>\r\n            <Route\r\n                path = '/preview'\r\n                exact\r\n                strict\r\n            >\r\n                <FunctionPreviewContainer />\r\n            </Route>\r\n            <Route\r\n                path = '/result'\r\n                exact\r\n                strict\r\n            >\r\n                <ConvolutionResult />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//Estilos\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => (\r\n    <nav className='navbar navbar-expand-lg sticky-top navbar-light bg-transparent'>\r\n        <Link className='navbar-brand' to='/'>Práctica 2</Link>\r\n        <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarText' aria-controls='navbarText' aria-expanded='false' aria-label='Toggle navigation'>\r\n            <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n        <div className='collapse navbar-collapse text-center' id='navbarText'>\r\n            <ul className='navbar-nav mr-auto'>\r\n            <li className='nav-item active'>\r\n                <Link className='nav-link' to='/start'>Inicio</Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/preview'>Preview</Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/result'>Resultado</Link>\r\n            </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\nimport FunctionsContext from '../FunctionsContext';\r\n\r\nconst withContextProvider = WrappedComponent => {\r\n    const WithContextProvider = props => {\r\n        const functions = useState()\r\n\r\n        return(\r\n            <FunctionsContext.Provider value = { functions }>\r\n                <WrappedComponent\r\n                    { ...props }\r\n                />\r\n            </FunctionsContext.Provider>\r\n        )\r\n    }\r\n    return WithContextProvider;\r\n}\r\n\r\nexport default withContextProvider;","import React, { useState } from 'react';\r\nimport AlertContext from '../Context/AlertContext';\r\n\r\n\r\nconst withAlertProvider = WrappedComponent => {\r\n    const initialAlertState = {\r\n        type: '',\r\n        message: '',\r\n        duration: 3000\r\n    }\r\n    const WithAlertProvider = props => {\r\n        const alert = useState(initialAlertState);\r\n        return(\r\n            <AlertContext.Provider value = { alert }>\r\n                <WrappedComponent\r\n                    { ...props }\r\n                />\r\n            </AlertContext.Provider>\r\n        )\r\n    }\r\n\r\n    return WithAlertProvider;\r\n}\r\n\r\nexport default withAlertProvider;","import React, { useState, Fragment } from 'react';\r\n//Componentes\r\nimport Alert from './Components/Alerts/Alert';\r\nimport Routes from './Routes';\r\nimport Navbar from './Components/Layout/Navigation/Navbar';\r\n//HOCS\r\nimport withContextProvider from './Context/InputFunction/HOC/withContextProvider';\r\nimport withAlertProvider from './Components/Alerts/HOC/withAlertProvider';\r\n//Estilos\r\nimport './App.css';\r\nimport withConvolutionProvider from './Context/Convolution/HOC/withConvolutionProvider';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n    return(\r\n        <Fragment>\r\n            <Navbar />\r\n            <Alert />\r\n            <Routes />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withAlertProvider(withContextProvider(withConvolutionProvider(App)));","import React, { useState, useEffect } from 'react';\r\nimport ConvolutionContext from '../ConvolutionContext';\r\n\r\nconst withConvolutionProvider = WrappedComponent => {\r\n    let initialConvolutionResult = {\r\n        origin: 0,\r\n        sequence: [],\r\n        periodic: false\r\n    }\r\n    const WithConvolutionProvider = props => {\r\n        let convolutionResult = useState(initialConvolutionResult);\r\n\r\n        return(\r\n            <ConvolutionContext.Provider value = { convolutionResult }>\r\n                <WrappedComponent\r\n                    { ...props }\r\n                />\r\n            </ConvolutionContext.Provider>\r\n        )\r\n    }\r\n\r\n    return WithConvolutionProvider;\r\n}\r\n\r\nexport default withConvolutionProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n//Librerias adicionales\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n//Componentes\nimport App from './App';\n//Estilos\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nlet WithRouter = <Router><App /></Router>;\n\nReactDOM.render(WithRouter, document.getElementById('root'));\n\n"],"sourceRoot":""}